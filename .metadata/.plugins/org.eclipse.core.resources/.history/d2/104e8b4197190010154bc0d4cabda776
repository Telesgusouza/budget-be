package com.example.demo.resource;

import java.util.UUID;

import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.dto.BudgetDTO;
import com.example.demo.entity.Budget;
import com.example.demo.entity.User;
import com.example.demo.service.BudgetService;
import com.example.demo.service.exception.AuthenticationFailed;
import com.example.demo.service.exception.ResourceNotFoundException;

import io.swagger.v3.oas.annotations.parameters.RequestBody;

@RestController
@RequestMapping(value = "/api/v1/budget")
public class BudgetController {

	private BudgetService budgetService;
	
	@PostMapping
	public ResponseEntity<Budget> addNewBudget(@AuthenticationPrincipal User user, 
			@RequestBody BudgetDTO data) {
		
		if (user == null) {
			throw new AuthenticationFailed("invalid data");
		}
		
		Budget response = budgetService.addBudget(user, data);
		
		return ResponseEntity.status(201).body(response);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Budget> getBudget(@PathVariable UUID id) {
		
		Budget budget = budgetService.getBudget(id);
		
		if (budget == null) {
			throw new ResourceNotFoundException("info budget not found");
		}
		
		return ResponseEntity.status(200).body(budget);
	}
	
	@GetMapping
	public ResponseEntity<Response>
	
}



















































