package com.example.demo.service;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.UUID;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.test.context.TestPropertySource;

import com.example.demo.dto.PotDTO;
import com.example.demo.entity.Pot;
import com.example.demo.entity.User;
import com.example.demo.enums.UserRole;
import com.example.demo.repositories.PotRepository;
import com.example.demo.repositories.UpdateDateRepository;
import com.example.demo.repositories.UserRepository;

@TestPropertySource(properties = { "cloud.aws.credentials.accessKey=your-access-key",
		"cloud.aws.credentials.secretKey=your-secret-key", "cloud.aws.region.static=us-east-1",
		"cloud.aws.stack.auto=false", "cloud.aws.kms.enabled=false" })
@AutoConfigureMockMvc
@ExtendWith(MockitoExtension.class)
public class PotServiceTest {

	@Mock
	private UserRepository userRepository;

	@Mock
	private PotRepository potRepository;

	@Mock
	private UpdateDateRepository updateDateRepository;

	@InjectMocks
	private PotService potService;

	@DisplayName("I add new successfully")
	@Test
	public void iAddNewSuccessfully() {

		User user = new User(UUID.randomUUID(), "img", "test@gmail.com", "password_123", "name test", UserRole.USER);
		PotDTO data = new PotDTO("title", "description", (float) 205.50);
//		UpdateDate update = new UpdateDate(UUID.randomUUID(), Instant.now(), data.monthlyAmount());

		Pot pot = new Pot(UUID.randomUUID(), "title", "escription", (float) 205.50, new ArrayList<>());

		when(potRepository.save(pot)).thenReturn(pot);

		Pot request = potService.newPot(user, data);

		assertNotNull(request);

	}

}
